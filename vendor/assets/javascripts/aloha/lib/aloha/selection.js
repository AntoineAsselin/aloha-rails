
define(['aloha/core','jquery','util/class','util/range','util/arrays','util/strings','aloha/console','PubSub','aloha/engine','aloha/ecma5shims','aloha/rangy-core'],function(Aloha,jQuery,Class,Range,Arrays,Strings,console,PubSub,Engine,e5s){"use strict";var GENTICS=window.GENTICS;function isCollapsedAndEmptyOrEndBr(rangeObject){var firstChild;if(rangeObject.startContainer!==rangeObject.endContainer){return false;}
if(rangeObject.startContainer.nodeType!=1){return false;}
firstChild=rangeObject.startContainer.firstChild;return(!firstChild||(!firstChild.nextSibling&&firstChild.nodeName=='BR'));}
function isCollapsedAndEndBr(rangeObject){if(rangeObject.startContainer!==rangeObject.endContainer){return false;}
if(rangeObject.startContainer.nodeType!=1){return false;}
return Engine.isEndBreak(rangeObject.startContainer);}
var prevStartContext=null;var prevEndContext=null;function makeContextHtml(node,parents){var result=[],parent,len,i;if(1===node.nodeType&&node.nodeName!=='BODY'&&node.nodeName!=='HTML'){result.push(node.cloneNode(false).outerHTML);}else{result.push('#'+node.nodeType);}
for(i=0,len=parents.length;i<len;i++){parent=parents[i];if(parent.nodeName==='BODY'||parent.nodeName==='HTML'){break;}
result.push(parent.cloneNode(false).outerHTML);}
return result.join('');}
function getChangedContext(node,context){var until=Aloha.activeEditable?Aloha.activeEditable.obj.parent()[0]:null;var parents=jQuery(node).parentsUntil(until).get();var html=makeContextHtml(node,parents);var equal=(context&&node===context.node&&Arrays.equal(context.parents,parents)&&html===context.html);return equal?null:{node:node,parents:parents,html:html};}
function triggerSelectionContextChanged(rangeObject,event){var startContainer=rangeObject.startContainer;var endContainer=rangeObject.endContainer;if(!startContainer||!endContainer){console.warn("aloha/selection","encountered range object without start or end container");return;}
var startContext=getChangedContext(startContainer,prevStartContext);var endContext=getChangedContext(endContainer,prevEndContext);if(!startContext&&!endContext){return;}
prevStartContext=startContext;prevEndContext=endContext;PubSub.pub('aloha.selection.context-change',{range:rangeObject,event:event});}
var Selection=Class.extend({_constructor:function(){this.rangeObject={};this.preventSelectionChangedFlag=false;this.tagHierarchy={'textNode':{},'abbr':{'textNode':true},'b':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'a':true,'del':true,'ins':true,'u':true,'cite':true,'q':true,'code':true,'abbr':true,'strong':true},'pre':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'a':true,'del':true,'ins':true,'u':true,'cite':true,'q':true,'code':true,'abbr':true},'blockquote':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'a':true,'del':true,'ins':true,'u':true,'cite':true,'q':true,'code':true,'abbr':true,'p':true,'h1':true,'h2':true,'h3':true,'h4':true,'h5':true,'h6':true},'ins':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'a':true,'u':true,'p':true,'h1':true,'h2':true,'h3':true,'h4':true,'h5':true,'h6':true},'ul':{'li':true},'ol':{'li':true},'li':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'ul':true,'ol':true,'h1':true,'h2':true,'h3':true,'h4':true,'h5':true,'h6':true,'del':true,'ins':true,'u':true,'a':true},'tr':{'td':true,'th':true},'table':{'tr':true},'div':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'ul':true,'ol':true,'table':true,'h1':true,'h2':true,'h3':true,'h4':true,'h5':true,'h6':true,'del':true,'ins':true,'u':true,'p':true,'div':true,'pre':true,'blockquote':true,'a':true},'h1':{'textNode':true,'b':true,'i':true,'em':true,'sup':true,'sub':true,'br':true,'span':true,'img':true,'a':true,'del':true,'ins':true,'u':true}};this.tagHierarchy={'textNode':this.tagHierarchy.textNode,'abbr':this.tagHierarchy.abbr,'br':this.tagHierarchy.textNode,'img':this.tagHierarchy.textNode,'b':this.tagHierarchy.b,'strong':this.tagHierarchy.b,'code':this.tagHierarchy.b,'q':this.tagHierarchy.b,'blockquote':this.tagHierarchy.blockquote,'cite':this.tagHierarchy.b,'i':this.tagHierarchy.b,'em':this.tagHierarchy.b,'sup':this.tagHierarchy.b,'sub':this.tagHierarchy.b,'span':this.tagHierarchy.b,'del':this.tagHierarchy.del,'ins':this.tagHierarchy.ins,'u':this.tagHierarchy.b,'p':this.tagHierarchy.b,'pre':this.tagHierarchy.pre,'a':this.tagHierarchy.b,'ul':this.tagHierarchy.ul,'ol':this.tagHierarchy.ol,'li':this.tagHierarchy.li,'td':this.tagHierarchy.li,'div':this.tagHierarchy.div,'h1':this.tagHierarchy.h1,'h2':this.tagHierarchy.h1,'h3':this.tagHierarchy.h1,'h4':this.tagHierarchy.h1,'h5':this.tagHierarchy.h1,'h6':this.tagHierarchy.h1,'table':this.tagHierarchy.table};this.replacingElements={'h1':{'p':true,'h1':true,'h2':true,'h3':true,'h4':true,'h5':true,'h6':true,'pre':true,'blockquote':true}};this.replacingElements={'h1':this.replacingElements.h1,'h2':this.replacingElements.h1,'h3':this.replacingElements.h1,'h4':this.replacingElements.h1,'h5':this.replacingElements.h1,'h6':this.replacingElements.h1,'pre':this.replacingElements.h1,'p':this.replacingElements.h1,'blockquote':this.replacingElements.h1};this.allowedToStealElements={'h1':{'textNode':true}};this.allowedToStealElements={'h1':this.allowedToStealElements.h1,'h2':this.allowedToStealElements.h1,'h3':this.allowedToStealElements.h1,'h4':this.allowedToStealElements.h1,'h5':this.allowedToStealElements.h1,'h6':this.allowedToStealElements.h1,'p':this.tagHierarchy.b};},SelectionTree:function(){this.domobj={};this.selection=undefined;this.children=[];},onChange:function(objectClicked,event,timeout){if(this.updateSelectionTimeout){window.clearTimeout(this.updateSelectionTimeout);}
var selection=this;this.updateSelectionTimeout=window.setTimeout(function(){var range=new Aloha.Selection.SelectionRange(true);if(!range.startContainer||'HTML'===range.startContainer.nodeName||'BODY'===range.startContainer.nodeName){if(!this.updateSelectionTimeout){selection.onChange(objectClicked,event,10+(timeout||5)*2);}
return;}
Aloha.Selection._updateSelection(event,range);},timeout||5);},preventSelectionChanged:function(){this.preventSelectionChangedFlag=true;},isSelectionChangedPrevented:function(){var prevented=this.preventSelectionChangedFlag;this.preventSelectionChangedFlag=false;return prevented;},isSelectionEditable:function(){return(this.rangeObject.commonAncestorContainer&&jQuery(this.rangeObject.commonAncestorContainer).contentEditable());},isFloatingMenuVisible:function(){var visible=jQuery(Aloha.Selection.rangeObject.commonAncestorContainer).attr('data-aloha-floatingmenu-visible');if(visible!=='undefined'){if(visible==='true'){return true;}
return false;}
return false;},updateSelection:function(event){return this._updateSelection(event,null);},_updateSelection:function(event,range){if(event&&event.originalEvent&&true===event.originalEvent.stopSelectionUpdate){return false;}
if(typeof range==='undefined'){return false;}
this.rangeObject=range=range||new Aloha.Selection.SelectionRange(true);range.update();if(range&&range.startContainer&&range.endContainer){var inEditable=jQuery(range.commonAncestorContainer).closest('.aloha-editable').length>0;if(inEditable){var validStartPosition=!(3===range.startContainer.nodeType&&!jQuery(range.startContainer.parentNode).contentEditable());var validEndPosition=!(3===range.endContainer.nodeType&&!jQuery(range.endContainer.parentNode).contentEditable());if(!validStartPosition||!validEndPosition){Aloha.getSelection().removeAllRanges();return true;}}}
if(this.isSelectionChangedPrevented()){return true;}
Aloha.trigger('aloha-selection-changed-before',[this.rangeObject,event]);Aloha.trigger('aloha-selection-changed',[this.rangeObject,event]);triggerSelectionContextChanged(this.rangeObject,event);Aloha.trigger('aloha-selection-changed-after',[this.rangeObject,event]);return true;},getSelectionTree:function(rangeObject){if(!rangeObject){return this.rangeObject.getSelectionTree();}
if(!rangeObject.commonAncestorContainer){Aloha.Log.error(this,'the rangeObject is missing the commonAncestorContainer');return false;}
this.inselection=false;if(GENTICS.Utils.Dom.doCleanup({'merge':true},rangeObject)){rangeObject.update();rangeObject.select();}
return this.recursiveGetSelectionTree(rangeObject,rangeObject.commonAncestorContainer);},recursiveGetSelectionTree:function(rangeObject,currentObject){var jQueryCurrentObject=jQuery(currentObject),childCount=0,that=this,currentElements=[];jQueryCurrentObject.contents().each(function(index){var selectionType='none',startOffset=false,endOffset=false,collapsedFound=false,i,elementsLength,noneFound=false,partialFound=false,fullFound=false;if(rangeObject.isCollapsed()&&currentObject===rangeObject.startContainer&&rangeObject.startOffset==index){currentElements[childCount]=new Aloha.Selection.SelectionTree();currentElements[childCount].selection='collapsed';currentElements[childCount].domobj=undefined;that.inselection=false;collapsedFound=true;childCount++;}
if(!that.inselection&&!collapsedFound){var nodeType;try{nodeType=this.nodeType;}catch(e){return;}
switch(nodeType){case 3:if(this===rangeObject.startContainer){that.inselection=true;selectionType=rangeObject.startOffset>0?'partial':'full';startOffset=rangeObject.startOffset;endOffset=this.length;}
break;case 1:if(this===rangeObject.startContainer&&rangeObject.startOffset===0){that.inselection=true;selectionType='full';}
if(currentObject===rangeObject.startContainer&&rangeObject.startOffset===index){that.inselection=true;selectionType='full';}
break;}}
if(that.inselection&&!collapsedFound){if(selectionType=='none'){selectionType='full';}
switch(this.nodeType){case 3:if(this===rangeObject.endContainer){that.inselection=false;if(rangeObject.endOffset<this.length){selectionType='partial';}
if(startOffset===false){startOffset=0;}
endOffset=rangeObject.endOffset;}
break;case 1:if(this===rangeObject.endContainer&&rangeObject.endOffset===0){that.inselection=false;}
break;}
if(currentObject===rangeObject.endContainer&&rangeObject.endOffset<=index){that.inselection=false;selectionType='none';}}
currentElements[childCount]=new Aloha.Selection.SelectionTree();currentElements[childCount].domobj=this;currentElements[childCount].selection=selectionType;if(selectionType=='partial'){currentElements[childCount].startOffset=startOffset;currentElements[childCount].endOffset=endOffset;}
currentElements[childCount].children=that.recursiveGetSelectionTree(rangeObject,this);elementsLength=currentElements[childCount].children.length;if(elementsLength>0){for(i=0;i<elementsLength;++i){switch(currentElements[childCount].children[i].selection){case'none':noneFound=true;break;case'full':fullFound=true;break;case'partial':partialFound=true;break;}}
if(partialFound||(fullFound&&noneFound)){currentElements[childCount].selection='partial';}else if(fullFound&&!partialFound&&!noneFound){currentElements[childCount].selection='full';}}
childCount++;});if(rangeObject.isCollapsed()&&currentObject===rangeObject.startContainer&&rangeObject.startOffset==currentObject.childNodes.length){currentElements[childCount]=new Aloha.Selection.SelectionTree();currentElements[childCount].selection='collapsed';currentElements[childCount].domobj=undefined;}
return currentElements;},getRangeObject:function(){return this.rangeObject;},isRangeObjectWithinMarkup:function(rangeObject,startOrEnd,markupObject,tagComparator,limitObject){var domObj=!startOrEnd?rangeObject.startContainer:rangeObject.endContainer,that=this,parents=jQuery(domObj).parents(),returnVal=false,i=-1;if(typeof tagComparator!=='undefined'&&typeof tagComparator!=='function'){Aloha.Log.error(this,'parameter tagComparator is not a function');}
if(typeof tagComparator==='undefined'){tagComparator=function(domobj,markupObject){return that.standardTextLevelSemanticsComparator(domobj,markupObject);};}
if(parents.length>0){parents.each(function(){if(this===limitObject){Aloha.Log.debug(that,'reached limit dom obj');return false;}
if(tagComparator(this,markupObject)){if(returnVal===false){returnVal=[];}
Aloha.Log.debug(that,'reached object equal to markup');i++;returnVal[i]=this;return true;}});}
return returnVal;},standardSectionsAndGroupingContentComparator:function(domobj,markupObject){if(domobj.nodeType!==1){Aloha.Log.debug(this,'only element nodes (nodeType == 1) can be compared');return false;}
if(!markupObject[0].nodeName){return false;}
var elemMap=Aloha.Selection.replacingElements[domobj.nodeName.toLowerCase()];return elemMap&&elemMap[markupObject[0].nodeName.toLowerCase()];},standardTagNameComparator:function(domobj,markupObject){if(domobj.nodeType===1){if(domobj.nodeName!=markupObject[0].nodeName){return false;}
return true;}
Aloha.Log.debug(this,'only element nodes (nodeType == 1) can be compared');return false;},standardTextLevelSemanticsComparator:function(domobj,markupObject){if(domobj.nodeType===1){if(domobj.nodeName!=markupObject[0].nodeName){return false;}
if(!this.standardAttributesComparator(domobj,markupObject)){return false;}
return true;}
Aloha.Log.debug(this,'only element nodes (nodeType == 1) can be compared');return false;},standardAttributesComparator:function(domobj,markupObject){var classesA=Strings.words((domobj&&domobj.className)||'');var classesB=Strings.words((markupObject.length&&markupObject[0].className)||'');Arrays.sortUnique(classesA);Arrays.sortUnique(classesB);return Arrays.equal(classesA,classesB);},changeMarkup:function(rangeObject,markupObject,tagComparator){var tagName=markupObject[0].tagName.toLowerCase(),newCAC,limitObject,backupRangeObject,relevantMarkupObjectsAtSelectionStart=this.isRangeObjectWithinMarkup(rangeObject,false,markupObject,tagComparator,limitObject),relevantMarkupObjectsAtSelectionEnd=this.isRangeObjectWithinMarkup(rangeObject,true,markupObject,tagComparator,limitObject),nextSibling,relevantMarkupObjectAfterSelection,prevSibling,relevantMarkupObjectBeforeSelection,extendedRangeObject;var parentElement;if(this.replacingElements[tagName]){backupRangeObject=rangeObject;rangeObject=new this.SelectionRange(rangeObject);if(Aloha.activeEditable){newCAC=Aloha.activeEditable.obj.get(0);}else{newCAC=jQuery('body');}
rangeObject.update(newCAC);markupObject.isReplacingElement=true;}else{if(rangeObject.isCollapsed()){Aloha.Log.debug(this,'early returning from applying markup because nothing is currently selected');return false;}}
if(Aloha.activeEditable){limitObject=Aloha.activeEditable.obj[0];}else{limitObject=jQuery('body');}
if(!markupObject.isReplacingElement&&rangeObject.startOffset===0){if(null!=(prevSibling=this.getTextNodeSibling(false,rangeObject.commonAncestorContainer.parentNode,rangeObject.startContainer))){relevantMarkupObjectBeforeSelection=this.isRangeObjectWithinMarkup({startContainer:prevSibling,startOffset:0},false,markupObject,tagComparator,limitObject);}}
if(!markupObject.isReplacingElement&&(rangeObject.endOffset===rangeObject.endContainer.length)){if(null!=(nextSibling=this.getTextNodeSibling(true,rangeObject.commonAncestorContainer.parentNode,rangeObject.endContainer))){relevantMarkupObjectAfterSelection=this.isRangeObjectWithinMarkup({startContainer:nextSibling,startOffset:0},false,markupObject,tagComparator,limitObject);}}
if(!markupObject.isReplacingElement&&(relevantMarkupObjectsAtSelectionStart&&!relevantMarkupObjectsAtSelectionEnd)){Aloha.Log.info(this,'markup 2 non-markup');this.prepareForRemoval(rangeObject.getSelectionTree(),markupObject,tagComparator);jQuery(relevantMarkupObjectsAtSelectionStart).addClass('preparedForRemoval');this.insertCroppedMarkups(relevantMarkupObjectsAtSelectionStart,rangeObject,false,tagComparator);}else if(!markupObject.isReplacingElement&&relevantMarkupObjectsAtSelectionStart&&relevantMarkupObjectsAtSelectionEnd){Aloha.Log.info(this,'markup 2 markup');this.prepareForRemoval(rangeObject.getSelectionTree(),markupObject,tagComparator);this.splitRelevantMarkupObject(relevantMarkupObjectsAtSelectionStart,relevantMarkupObjectsAtSelectionEnd,rangeObject,tagComparator);}else if(!markupObject.isReplacingElement&&((!relevantMarkupObjectsAtSelectionStart&&relevantMarkupObjectsAtSelectionEnd)||relevantMarkupObjectAfterSelection||relevantMarkupObjectBeforeSelection)){Aloha.Log.info(this,'non-markup 2 markup OR with next2markup');if(relevantMarkupObjectBeforeSelection&&relevantMarkupObjectAfterSelection){extendedRangeObject=new Aloha.Selection.SelectionRange(rangeObject);extendedRangeObject.startContainer=jQuery(relevantMarkupObjectBeforeSelection[relevantMarkupObjectBeforeSelection.length-1]).textNodes()[0];extendedRangeObject.startOffset=0;extendedRangeObject.endContainer=jQuery(relevantMarkupObjectAfterSelection[relevantMarkupObjectAfterSelection.length-1]).textNodes().last()[0];extendedRangeObject.endOffset=extendedRangeObject.endContainer.length;extendedRangeObject.update();this.applyMarkup(extendedRangeObject.getSelectionTree(),rangeObject,markupObject,tagComparator);Aloha.Log.info(this,'double extending previous markup(previous and after selection), actually wrapping it ...');}else if(relevantMarkupObjectBeforeSelection&&!relevantMarkupObjectAfterSelection&&!relevantMarkupObjectsAtSelectionEnd){this.extendExistingMarkupWithSelection(relevantMarkupObjectBeforeSelection,rangeObject,false,tagComparator);Aloha.Log.info(this,'extending previous markup');}else if(relevantMarkupObjectBeforeSelection&&!relevantMarkupObjectAfterSelection&&relevantMarkupObjectsAtSelectionEnd){extendedRangeObject=new Aloha.Selection.SelectionRange(rangeObject);extendedRangeObject.startContainer=jQuery(relevantMarkupObjectBeforeSelection[relevantMarkupObjectBeforeSelection.length-1]).textNodes()[0];extendedRangeObject.startOffset=0;extendedRangeObject.endContainer=jQuery(relevantMarkupObjectsAtSelectionEnd[relevantMarkupObjectsAtSelectionEnd.length-1]).textNodes().last()[0];extendedRangeObject.endOffset=extendedRangeObject.endContainer.length;extendedRangeObject.update();this.applyMarkup(extendedRangeObject.getSelectionTree(),rangeObject,markupObject,tagComparator);Aloha.Log.info(this,'double extending previous markup(previous and relevant at the end), actually wrapping it ...');}else if(!relevantMarkupObjectBeforeSelection&&relevantMarkupObjectAfterSelection){this.extendExistingMarkupWithSelection(relevantMarkupObjectAfterSelection,rangeObject,true,tagComparator);Aloha.Log.info(this,'extending following markup backwards');}else{this.extendExistingMarkupWithSelection(relevantMarkupObjectsAtSelectionEnd,rangeObject,true,tagComparator);}}else if(markupObject.isReplacingElement||(!relevantMarkupObjectsAtSelectionStart&&!relevantMarkupObjectsAtSelectionEnd&&!relevantMarkupObjectBeforeSelection&&!relevantMarkupObjectAfterSelection)){Aloha.Log.info(this,'non-markup 2 non-markup');if(isCollapsedAndEmptyOrEndBr(rangeObject)){var newMarkup=markupObject.clone();if(isCollapsedAndEndBr(rangeObject)){newMarkup[0].appendChild(Engine.createEndBreak());}
if(Aloha.activeEditable&&jQuery.browser.mozilla){Aloha.activeEditable.obj.focus();}
if(Engine.isEditable(rangeObject.startContainer)){Engine.copyAttributes(rangeObject.startContainer,newMarkup[0]);jQuery(rangeObject.startContainer).after(newMarkup[0]).remove();}else if(Engine.isEditingHost(rangeObject.startContainer)){jQuery(rangeObject.startContainer).append(newMarkup[0]);Engine.ensureContainerEditable(newMarkup[0]);}
backupRangeObject.startContainer=newMarkup[0];backupRangeObject.endContainer=newMarkup[0];backupRangeObject.startOffset=0;backupRangeObject.endOffset=0;return;}
this.applyMarkup(rangeObject.getSelectionTree(),rangeObject,markupObject,tagComparator,{setRangeObject2NewMarkup:true});backupRangeObject.startContainer=rangeObject.startContainer;backupRangeObject.endContainer=rangeObject.endContainer;backupRangeObject.startOffset=rangeObject.startOffset;backupRangeObject.endOffset=rangeObject.endOffset;}
if(markupObject.isReplacingElement){if(backupRangeObject&&backupRangeObject.startContainer.className&&backupRangeObject.startContainer.className.indexOf('preparedForRemoval')>-1){parentElement=jQuery(backupRangeObject.startContainer).parents(markupObject[0].tagName).get(0);backupRangeObject.startContainer=parentElement;rangeObject.startContainer=parentElement;}
if(backupRangeObject&&backupRangeObject.endContainer.className&&backupRangeObject.endContainer.className.indexOf('preparedForRemoval')>-1){parentElement=jQuery(backupRangeObject.endContainer).parents(markupObject[0].tagName).get(0);backupRangeObject.endContainer=parentElement;rangeObject.endContainer=parentElement;}}
jQuery('.preparedForRemoval').zap();if(markupObject.isReplacingElement){if(e5s.Node.ELEMENT_NODE===backupRangeObject.startContainer.nodeType&&backupRangeObject.startContainer.childNodes&&backupRangeObject.startContainer.childNodes.length<backupRangeObject.startOffset){backupRangeObject.startOffset=backupRangeObject.startContainer.childNodes.length;rangeObject.startOffset=backupRangeObject.startContainer.childNodes.length;}
if(e5s.Node.ELEMENT_NODE===backupRangeObject.endContainer.nodeType&&backupRangeObject.endContainer.childNodes&&backupRangeObject.endContainer.childNodes.length<backupRangeObject.endOffset){backupRangeObject.endOffset=backupRangeObject.endContainer.childNodes.length;rangeObject.endOffset=backupRangeObject.endContainer.childNodes.length;}
rangeObject.endContainer=backupRangeObject.endContainer;rangeObject.endOffset=backupRangeObject.endOffset;rangeObject.startContainer=backupRangeObject.startContainer;rangeObject.startOffset=backupRangeObject.startOffset;backupRangeObject.update();backupRangeObject.select();}else{rangeObject.update();rangeObject.select();}},areMarkupObjectsAsLongAsRangeObject:function(relevantMarkupObjectsAtSelectionStart,relevantMarkupObjectsAtSelectionEnd,rangeObject){var i,el,textNode,relMarkupEnd,relMarkupStart;if(rangeObject.startOffset!==0){return false;}
for(i=0,relMarkupStart=relevantMarkupObjectsAtSelectionStart.length;i<relMarkupStart;i++){el=jQuery(relevantMarkupObjectsAtSelectionStart[i]);if(el.textNodes().first()[0]!==rangeObject.startContainer){return false;}}
for(i=0,relMarkupEnd=relevantMarkupObjectsAtSelectionEnd.length;i<relMarkupEnd;i++){el=jQuery(relevantMarkupObjectsAtSelectionEnd[i]);textNode=el.textNodes().last()[0];if(textNode!==rangeObject.endContainer||textNode.length!=rangeObject.endOffset){return false;}}
return true;},splitRelevantMarkupObject:function(relevantMarkupObjectsAtSelectionStart,relevantMarkupObjectsAtSelectionEnd,rangeObject,tagComparator){jQuery(relevantMarkupObjectsAtSelectionStart).addClass('preparedForRemoval');jQuery(relevantMarkupObjectsAtSelectionEnd).addClass('preparedForRemoval');if(this.areMarkupObjectsAsLongAsRangeObject(relevantMarkupObjectsAtSelectionStart,relevantMarkupObjectsAtSelectionEnd,rangeObject)){return true;}
var relevantMarkupObjectAtSelectionStartAndEnd=this.intersectRelevantMarkupObjects(relevantMarkupObjectsAtSelectionStart,relevantMarkupObjectsAtSelectionEnd);if(relevantMarkupObjectAtSelectionStartAndEnd){this.insertCroppedMarkups([relevantMarkupObjectAtSelectionStartAndEnd],rangeObject,false,tagComparator);this.insertCroppedMarkups([relevantMarkupObjectAtSelectionStartAndEnd],rangeObject,true,tagComparator);}else{this.insertCroppedMarkups(relevantMarkupObjectsAtSelectionStart,rangeObject,false,tagComparator);this.insertCroppedMarkups(relevantMarkupObjectsAtSelectionEnd,rangeObject,true,tagComparator);}
return true;},intersectRelevantMarkupObjects:function(relevantMarkupObjectsAtSelectionStart,relevantMarkupObjectsAtSelectionEnd){var intersection=false,i,elStart,j,elEnd,relMarkupStart,relMarkupEnd;if(!relevantMarkupObjectsAtSelectionStart||!relevantMarkupObjectsAtSelectionEnd){return intersection;}
relMarkupStart=relevantMarkupObjectsAtSelectionStart.length;relMarkupEnd=relevantMarkupObjectsAtSelectionEnd.length;for(i=0;i<relMarkupStart;i++){elStart=relevantMarkupObjectsAtSelectionStart[i];for(j=0;j<relMarkupEnd;j++){elEnd=relevantMarkupObjectsAtSelectionEnd[j];if(elStart===elEnd){intersection=elStart;}}}
return intersection;},extendExistingMarkupWithSelection:function(relevantMarkupObjects,rangeObject,startOrEnd,tagComparator){var extendMarkupsAtStart,extendMarkupsAtEnd,objects,i,relMarkupLength,el,textnodes,nodeNr;if(!startOrEnd){extendMarkupsAtStart=true;}
if(startOrEnd){extendMarkupsAtEnd=true;}
objects=[];for(i=0,relMarkupLength=relevantMarkupObjects.length;i<relMarkupLength;i++){objects[i]=new this.SelectionRange();el=relevantMarkupObjects[i];if(extendMarkupsAtEnd&&!extendMarkupsAtStart){objects[i].startContainer=rangeObject.startContainer;objects[i].startOffset=rangeObject.startOffset;textnodes=jQuery(el).textNodes(true);nodeNr=textnodes.length-1;objects[i].endContainer=textnodes[nodeNr];objects[i].endOffset=textnodes[nodeNr].length;objects[i].update();this.applyMarkup(objects[i].getSelectionTree(),rangeObject,this.getClonedMarkup4Wrapping(el),tagComparator,{setRangeObject2NewMarkup:true});}
if(!extendMarkupsAtEnd&&extendMarkupsAtStart){textnodes=jQuery(el).textNodes(true);objects[i].startContainer=textnodes[0];objects[i].startOffset=0;objects[i].endContainer=rangeObject.endContainer;objects[i].endOffset=rangeObject.endOffset;objects[i].update();this.applyMarkup(objects[i].getSelectionTree(),rangeObject,this.getClonedMarkup4Wrapping(el),tagComparator,{setRangeObject2NewMarkup:true});}}
return true;},getClonedMarkup4Wrapping:function(domobj){var wrapper=jQuery(domobj.outerHTML).removeClass('preparedForRemoval').empty();if(wrapper.attr('class').length===0){wrapper.removeAttr('class');}
return wrapper;},insertCroppedMarkups:function(relevantMarkupObjects,rangeObject,startOrEnd,tagComparator){var cropMarkupsAtEnd,cropMarkupsAtStart,textnodes,objects,i,el,textNodes;if(!startOrEnd){cropMarkupsAtEnd=true;}else{cropMarkupsAtStart=true;}
objects=[];for(i=0;i<relevantMarkupObjects.length;i++){objects[i]=new this.SelectionRange();el=relevantMarkupObjects[i];if(cropMarkupsAtEnd&&!cropMarkupsAtStart){textNodes=jQuery(el).textNodes(true);objects[i].startContainer=textNodes[0];objects[i].startOffset=0;if(objects[i].startContainer===rangeObject.startContainer&&objects[i].startOffset===rangeObject.startOffset){continue;}
if(rangeObject.startOffset===0){objects[i].endContainer=this.getTextNodeSibling(false,el,rangeObject.startContainer);objects[i].endOffset=objects[i].endContainer.length;}else{objects[i].endContainer=rangeObject.startContainer;objects[i].endOffset=rangeObject.startOffset;}
objects[i].update();this.applyMarkup(objects[i].getSelectionTree(),rangeObject,this.getClonedMarkup4Wrapping(el),tagComparator,{setRangeObject2NextSibling:true});}
if(!cropMarkupsAtEnd&&cropMarkupsAtStart){objects[i].startContainer=rangeObject.endContainer;objects[i].startOffset=rangeObject.endOffset;textnodes=jQuery(el).textNodes(true);objects[i].endContainer=textnodes[textnodes.length-1];objects[i].endOffset=textnodes[textnodes.length-1].length;objects[i].update();this.applyMarkup(objects[i].getSelectionTree(),rangeObject,this.getClonedMarkup4Wrapping(el),tagComparator,{setRangeObject2PreviousSibling:true});}}
return true;},changeMarkupOnSelection:function(markupObject){var rangeObject=this.getRangeObject();this.changeMarkup(rangeObject,markupObject,this.getStandardTagComparator(markupObject));GENTICS.Utils.Dom.doCleanup({'merge':true},rangeObject);rangeObject.update();rangeObject.select();this.rangeObject=rangeObject;},applyMarkup:function(selectionTree,rangeObject,markupObject,tagComparator,options){var optimizedSelectionTree,i,el,breakpoint;options=options||{};this.prepareForRemoval(selectionTree,markupObject,tagComparator);optimizedSelectionTree=this.optimizeSelectionTree4Markup(selectionTree,markupObject,tagComparator);breakpoint=true;for(i=0;i<optimizedSelectionTree.length;i++){el=optimizedSelectionTree[i];if(el.wrappable){this.wrapMarkupAroundSelectionTree(el.elements,rangeObject,markupObject,tagComparator,options);}else{Aloha.Log.debug(this,'dive further into non-wrappable object');this.applyMarkup(el.element.children,rangeObject,markupObject,tagComparator,options);}}},getMarkupType:function(markupObject){var nn=jQuery(markupObject)[0].nodeName.toLowerCase();if(markupObject.outerHtml){Aloha.Log.debug(this,'Node name detected: '+nn+' for: '+markupObject.outerHtml());}
if(nn=='#text'){return'textNode';}
if(this.replacingElements[nn]){return'sectionOrGroupingContent';}
if(this.tagHierarchy[nn]){return'textLevelSemantics';}
Aloha.Log.warn(this,'unknown markup passed to this.getMarkupType(...): '+markupObject.outerHtml());},getStandardTagComparator:function(markupObject){var that=this,result;switch(this.getMarkupType(markupObject)){case'textNode':result=function(p1,p2){return false;};break;case'sectionOrGroupingContent':result=function(domobj,markupObject){return that.standardSectionsAndGroupingContentComparator(domobj,markupObject);};break;default:result=function(domobj,markupObject){return that.standardTextLevelSemanticsComparator(domobj,markupObject);};break;}
return result;},prepareForRemoval:function(selectionTree,markupObject,tagComparator){var that=this,i,el;if(typeof tagComparator!=='undefined'&&typeof tagComparator!=='function'){Aloha.Log.error(this,'parameter tagComparator is not a function');}
if(typeof tagComparator==='undefined'){tagComparator=this.getStandardTagComparator(markupObject);}
for(i=0;i<selectionTree.length;i++){el=selectionTree[i];if(el.domobj&&(el.selection=='full'||(el.selection=='partial'&&markupObject.isReplacingElement))){if(el.domobj.nodeType===1&&tagComparator(el.domobj,markupObject)){Aloha.Log.debug(this,'Marking for removal: '+el.domobj.nodeName);jQuery(el.domobj).addClass('preparedForRemoval');}}
if(el.selection!='none'&&el.children.length>0){this.prepareForRemoval(el.children,markupObject,tagComparator);}}},wrapMarkupAroundSelectionTree:function(selectionTree,rangeObject,markupObject,tagComparator,options){var objects2wrap=[],j=-1,breakpoint=true,preText='',postText='',prevOrNext,textNode2Start,textnodes,newMarkup,i,el,middleText;Aloha.Log.debug(this,'The formatting <'+markupObject[0].tagName+'> will be wrapped around the selection');for(i=0;i<selectionTree.length;i++){el=selectionTree[i];if(el.domobj&&!this.canTag1WrapTag2(el.domobj.parentNode.tagName.toLowerCase(),markupObject[0].tagName.toLowerCase())){Aloha.Log.info(this,'Skipping the wrapping of <'+markupObject[0].tagName.toLowerCase()+'> because this tag is not allowed inside <'+el.domobj.parentNode.tagName.toLowerCase()+'>');continue;}
if(el.domobj&&el.domobj.nodeType===3&&jQuery.trim(el.domobj.nodeValue).length===0){continue;}
if(el.domobj&&el.selection=='partial'&&!markupObject.isReplacingElement){if(el.startOffset!==undefined&&el.endOffset===undefined){j++;preText+=el.domobj.data.substr(0,el.startOffset);el.domobj.data=el.domobj.data.substr(el.startOffset,el.domobj.data.length-el.startOffset);objects2wrap[j]=el.domobj;}else if(el.endOffset!==undefined&&el.startOffset===undefined){j++;postText+=el.domobj.data.substr(el.endOffset,el.domobj.data.length-el.endOffset);el.domobj.data=el.domobj.data.substr(0,el.endOffset);objects2wrap[j]=el.domobj;}else if(el.endOffset!==undefined&&el.startOffset!==undefined){if(el.startOffset==el.endOffset){Aloha.Log.debug(this,'skipping empty selection');continue;}
j++;preText+=el.domobj.data.substr(0,el.startOffset);middleText=el.domobj.data.substr(el.startOffset,el.endOffset-el.startOffset);postText+=el.domobj.data.substr(el.endOffset,el.domobj.data.length-el.endOffset);el.domobj.data=middleText;objects2wrap[j]=el.domobj;}else{Aloha.Log.debug(this,'diving into object');this.applyMarkup(el.children,rangeObject,markupObject,tagComparator,options);}}
if(el.domobj&&(el.selection=='full'||(el.selection=='partial'&&markupObject.isReplacingElement))){j++;objects2wrap[j]=el.domobj;}}
if(objects2wrap.length>0){objects2wrap=jQuery(objects2wrap);jQuery.each(objects2wrap,function(index,element){if(jQuery.browser.msie&&element.nodeType==3&&!element.nextSibling&&!element.previousSibling&&element.parentNode&&element.parentNode.nodeName.toLowerCase()=='li'){element.data=jQuery.trim(element.data);}});newMarkup=objects2wrap.wrapAll(markupObject).parent();newMarkup.before(preText).after(postText);if(options.setRangeObject2NewMarkup){textnodes=objects2wrap.textNodes();if(textnodes.index(rangeObject.startContainer)!=-1){rangeObject.startOffset=0;}
if(textnodes.index(rangeObject.endContainer)!=-1){rangeObject.endOffset=rangeObject.endContainer.length;}
breakpoint=true;}
if(options.setRangeObject2NextSibling){prevOrNext=true;textNode2Start=newMarkup.textNodes(true).last()[0];if(objects2wrap.index(rangeObject.startContainer)!=-1){rangeObject.startContainer=this.getTextNodeSibling(prevOrNext,newMarkup.parent(),textNode2Start);rangeObject.startOffset=0;}
if(objects2wrap.index(rangeObject.endContainer)!=-1){rangeObject.endContainer=this.getTextNodeSibling(prevOrNext,newMarkup.parent(),textNode2Start);rangeObject.endOffset=rangeObject.endOffset-textNode2Start.length;}}
if(options.setRangeObject2PreviousSibling){prevOrNext=false;textNode2Start=newMarkup.textNodes(true).first()[0];if(objects2wrap.index(rangeObject.startContainer)!=-1){rangeObject.startContainer=this.getTextNodeSibling(prevOrNext,newMarkup.parent(),textNode2Start);rangeObject.startOffset=0;}
if(objects2wrap.index(rangeObject.endContainer)!=-1){rangeObject.endContainer=this.getTextNodeSibling(prevOrNext,newMarkup.parent(),textNode2Start);rangeObject.endOffset=rangeObject.endContainer.length;}}}},getTextNodeSibling:function(previousOrNext,commonAncestorContainer,currentTextNode){var textNodes=jQuery(commonAncestorContainer).textNodes(true),newIndex,index;index=textNodes.index(currentTextNode);if(index==-1){return false;}
newIndex=index+(!previousOrNext?-1:1);return textNodes[newIndex]||false;},optimizeSelectionTree4Markup:function(selectionTree,markupObject,tagComparator){var groupMap=[],outerGroupIndex=0,innerGroupIndex=0,that=this,i,j,endPosition,startPosition;if(typeof tagComparator==='undefined'){tagComparator=function(domobj,markupObject){return that.standardTextLevelSemanticsComparator(markupObject);};}
for(i=0;i<selectionTree.length;i++){if(selectionTree[i].domobj&&selectionTree[i].selection!='none'){if(markupObject.isReplacingElement&&tagComparator(markupObject[0],jQuery(selectionTree[i].domobj))){if(groupMap[outerGroupIndex]!==undefined){outerGroupIndex++;}
groupMap[outerGroupIndex]={};groupMap[outerGroupIndex].wrappable=true;groupMap[outerGroupIndex].elements=[];groupMap[outerGroupIndex].elements[innerGroupIndex]=selectionTree[i];outerGroupIndex++;}else if(this.canMarkupBeApplied2ElementAsWhole([selectionTree[i]],markupObject)){if(groupMap[outerGroupIndex]===undefined){groupMap[outerGroupIndex]={};groupMap[outerGroupIndex].wrappable=true;groupMap[outerGroupIndex].elements=[];}
if(markupObject.isReplacingElement){startPosition=i;for(j=i-1;j>=0;j--){if(this.canMarkupBeApplied2ElementAsWhole([selectionTree[j]],markupObject)&&this.isMarkupAllowedToStealSelectionTreeElement(selectionTree[j],markupObject)){startPosition=j;}else{break;}}
endPosition=i;for(j=i+1;j<selectionTree.length;j++){if(this.canMarkupBeApplied2ElementAsWhole([selectionTree[j]],markupObject)&&this.isMarkupAllowedToStealSelectionTreeElement(selectionTree[j],markupObject)){endPosition=j;}else{break;}}
innerGroupIndex=0;for(j=startPosition;j<=endPosition;j++){groupMap[outerGroupIndex].elements[innerGroupIndex]=selectionTree[j];groupMap[outerGroupIndex].elements[innerGroupIndex].selection='full';innerGroupIndex++;}
innerGroupIndex=0;}else{groupMap[outerGroupIndex].elements[innerGroupIndex]=selectionTree[i];innerGroupIndex++;}}else{if(groupMap[outerGroupIndex]!==undefined){outerGroupIndex++;}
groupMap[outerGroupIndex]={};groupMap[outerGroupIndex].wrappable=false;groupMap[outerGroupIndex].element=selectionTree[i];innerGroupIndex=0;outerGroupIndex++;}}}
return groupMap;},isMarkupAllowedToStealSelectionTreeElement:function(selectionTreeElement,markupObject){if(!selectionTreeElement.domobj){return false;}
var maybeTextNodeName=selectionTreeElement.domobj.nodeName.toLowerCase(),nodeName=(maybeTextNodeName=='#text')?'textNode':maybeTextNodeName,markupName=markupObject[0].nodeName.toLowerCase(),elemMap=this.allowedToStealElements[markupName];return elemMap&&elemMap[nodeName];},canMarkupBeApplied2ElementAsWhole:function(selectionTree,markupObject){var htmlTag,i,el,returnVal;if(markupObject.jquery){htmlTag=markupObject[0].tagName;}
if(markupObject.tagName){htmlTag=markupObject.tagName;}
returnVal=true;for(i=0;i<selectionTree.length;i++){el=selectionTree[i];if(el.domobj&&(el.selection!="none"||markupObject.isReplacingElement)){if(!this.canTag1WrapTag2(htmlTag,el.domobj.nodeName)){return false;}
if(el.children.length>0&&!this.canMarkupBeApplied2ElementAsWhole(el.children,markupObject)){return false;}}}
return returnVal;},canTag1WrapTag2:function(t1,t2){t1=(t1=='#text')?'textNode':t1.toLowerCase();t2=(t2=='#text')?'textNode':t2.toLowerCase();var t1Map=this.tagHierarchy[t1];if(!t1Map){return true;}
if(!this.tagHierarchy[t2]){return true;}
return t1Map[t2];},mayInsertTag:function(tagName){var i;if(typeof this.rangeObject.unmodifiableMarkupAtStart=='object'){for(i=0;i<this.rangeObject.unmodifiableMarkupAtStart.length;++i){if(!this.canTag1WrapTag2(this.rangeObject.unmodifiableMarkupAtStart[i].nodeName,tagName)){return false;}}
return true;}
Aloha.Log.warn(this,'Unable to determine whether tag '+tagName+' may be inserted');return true;},toString:function(){return'Aloha.Selection';},SelectionRange:GENTICS.Utils.RangeObject.extend({_constructor:function(rangeObject){this._super(rangeObject);if(rangeObject){if(rangeObject.commonAncestorContainer){this.commonAncestorContainer=rangeObject.commonAncestorContainer;}
if(rangeObject.selectionTree){this.selectionTree=rangeObject.selectionTree;}
if(rangeObject.limitObject){this.limitObject=rangeObject.limitObject;}
if(rangeObject.markupEffectiveAtStart){this.markupEffectiveAtStart=rangeObject.markupEffectiveAtStart;}
if(rangeObject.unmodifiableMarkupAtStart){this.unmodifiableMarkupAtStart=rangeObject.unmodifiableMarkupAtStart;}
if(rangeObject.splitObject){this.splitObject=rangeObject.splitObject;}}},commonAncestorContainer:undefined,selectionTree:undefined,markupEffectiveAtStart:[],unmodifiableMarkupAtStart:[],limitObject:undefined,splitObject:undefined,select:function(){this._super();Aloha.Selection.updateSelection();},update:function(commonAncestorContainer){this.updatelimitObject();this.updateMarkupEffectiveAtStart();this.updateCommonAncestorContainer(commonAncestorContainer);this.selectionTree=undefined;},getSelectionTree:function(){if(!this.selectionTree){this.selectionTree=Aloha.Selection.getSelectionTree(this);}
return this.selectionTree;},getSelectedSiblings:function(domobj){var selectionTree=this.getSelectionTree();return this.recursionGetSelectedSiblings(domobj,selectionTree);},recursionGetSelectedSiblings:function(domobj,selectionTree){var selectedSiblings=false,foundObj=false,i;for(i=0;i<selectionTree.length;++i){if(selectionTree[i].domobj===domobj){foundObj=true;selectedSiblings=[];}else if(!foundObj&&selectionTree[i].children){selectedSiblings=this.recursionGetSelectedSiblings(domobj,selectionTree[i].children);if(selectedSiblings!==false){break;}}else if(foundObj&&selectionTree[i].domobj&&selectionTree[i].selection!='collapsed'&&selectionTree[i].selection!='none'){selectedSiblings.push(selectionTree[i].domobj);}else if(foundObj&&selectionTree[i].selection=='none'){break;}}
return selectedSiblings;},updateMarkupEffectiveAtStart:function(){this.markupEffectiveAtStart=[];this.unmodifiableMarkupAtStart=[];var parents=this.getStartContainerParents(),limitFound=false,splitObjectWasSet,i,el;for(i=0;i<parents.length;i++){el=parents[i];if(!limitFound&&(el!==this.limitObject)){this.markupEffectiveAtStart[i]=el;if(!splitObjectWasSet&&GENTICS.Utils.Dom.isSplitObject(el)){splitObjectWasSet=true;this.splitObject=el;}}else{limitFound=true;this.unmodifiableMarkupAtStart.push(el);}}
if(!splitObjectWasSet){this.splitObject=false;}
return;},updatelimitObject:function(){if(Aloha.editables&&Aloha.editables.length>0){var parents=this.getStartContainerParents(),editables=Aloha.editables,i,el,j,editable;for(i=0;i<parents.length;i++){el=parents[i];for(j=0;j<editables.length;j++){editable=editables[j].obj[0];if(el===editable){this.limitObject=el;return true;}}}}
this.limitObject=jQuery('body');return true;},toString:function(verbose){if(!verbose){return'Aloha.Selection.SelectionRange';}
return'Aloha.Selection.SelectionRange {start ['+this.startContainer.nodeValue+'] offset '+this.startOffset+', end ['+this.endContainer.nodeValue+'] offset '+this.endOffset+'}';}})});function nestedListInIEWorkaround(range){var nextSibling;if(jQuery.browser.msie&&range.startContainer===range.endContainer&&range.startOffset===range.endOffset&&range.startContainer.nodeType==3&&range.startOffset==range.startContainer.data.length&&range.startContainer.nextSibling){nextSibling=range.startContainer.nextSibling;if('OL'===nextSibling.nodeName||'UL'===nextSibling.nodeName){if(range.startContainer.data[range.startContainer.data.length-1]==' '){range.startOffset=range.endOffset=range.startOffset-1;}else{range.startContainer.data=range.startContainer.data+' ';}}}}
function correctRange(range){nestedListInIEWorkaround(range);return range;}
var AlohaSelection=Class.extend({_constructor:function(nativeSelection){this._nativeSelection=nativeSelection;this.ranges=[];this.preventChange=false;},anchorNode:null,anchorOffset:0,focusNode:null,focusOffset:0,isCollapsed:false,rangeCount:0,collapse:function(parentNode,offset){this._nativeSelection.collapse(parentNode,offset);},collapseToStart:function(){throw"NOT_IMPLEMENTED";},extend:function(parentNode,offset){},modify:function(alter,direction,granularity){},collapseToEnd:function(){this._nativeSelection.collapseToEnd();},selectAllChildren:function(parentNode){throw"NOT_IMPLEMENTED";},deleteFromDocument:function(){throw"NOT_IMPLEMENTED";},getRangeAt:function(index){return correctRange(this._nativeSelection.getRangeAt(index));},addRange:function(range){this._nativeSelection.addRange(range);this._nativeSelection._ranges[0]=correctRange(range);Aloha.Selection.updateSelection();},removeRange:function(range){this._nativeSelection.removeRange();},removeAllRanges:function(){this._nativeSelection.removeAllRanges();},refresh:function(event){},toString:function(){return'Aloha.Selection';},getRangeCount:function(){return this._nativeSelection.rangeCount;}});Aloha.getSelection=function(target){target=(target!==document||target!==window)?window:target;return new AlohaSelection(window.rangy.getSelection(target));};Aloha.createRange=function(givenWindow){return window.rangy.createRange(givenWindow);};var selection=new Selection();Aloha.Selection=selection;return selection;});